weatherapp:
  name: weatherapp
  namespace: default
  replicaCount: 2
  image:
    repository: roish1/weatherapp
    tag: latest
  service:
    type: ClusterIP
    # type: NodePort
    port: 5000
    targetPort: 5000
    # nodePort: 32300

  pvc:
    enabled: true
    name: efs-claim
    accessModes: ReadWriteMany
    resources:
      requests:
        storage: 1Gi

configmap:
  weatherapp:
    name: weatherapp-configmap
    data:
      BG_COLOR: "#3295a8"

ingress:
  enabled: true
  host: weather.roihub.click
  weatherapp:
    annotations:
      alb.ingress.kubernetes.io/scheme: internet-facing
      alb.ingress.kubernetes.io/target-type: ip
      alb.ingress.kubernetes.io/group.name: roihub-ingress-group
      alb.ingress.kubernetes.io/load-balancer-name: alb-for-cluster
      alb.ingress.kubernetes.io/listen-ports: '[{"HTTPS":443}]'
      alb.ingress.kubernetes.io/manage-backend-security-group-rules: "false"
      alb.ingress.kubernetes.io/certificate-arn: "arn:aws:acm:eu-north-1:977099005866:certificate/f7cb19e2-df69-4a75-b679-6f9d9245c1d1"
    spec:
      ingressClassName: alb
      rules:
        http:
          paths:
            path: /
            pathType: Prefix

efs:
  enabled: true
  name: efs-sc
  provisioner: efs.csi.aws.com
  parameters:
    provisioningMode: efs-ap
    fileSystemId: ""
    directoryPerms: "700"