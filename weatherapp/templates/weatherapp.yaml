apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: {{ .Chart.Name }}
  name: {{ .Chart.Name }}
  namespace: {{ .Values.weatherapp.namespace }}
spec:
  replicas: {{ .Values.weatherapp.replicaCount }}
  selector:
    matchLabels:
      app: {{ .Values.weatherapp.Name }}
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 50%
      maxUnavailable: 50%
  template:
    metadata:
      labels:
        app: {{ .Values.weatherapp.Name }}
    spec:
      containers:
      - image: "{{ .Values.weatherapp.image.repository }}:{{ .Values.weatherapp.image.tag }}"
        name: {{ .Values.weatherapp.Name }}
        ports:
        - containerPort: {{ .Values.weatherapp.service.port }}
        envFrom:
          - configMapRef:
              name: weatherapp-configmap
        volumeMounts:
          - mountPath: "/weather/weather_history"
            name: efs-volume
      volumes:
      - name: efs-volume
        persistentVolumeClaim:
          claimName: efs-claim
      topologySpreadConstraints:
      - maxSkew: 1
        topologyKey: kubernetes.io/hostname
        whenUnsatisfiable: ScheduleAnyway
        labelSelector:
          matchLabels:
            app: {{ .Values.weatherapp.Name }}